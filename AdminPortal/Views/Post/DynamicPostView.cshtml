@using MessageBoardClassLibrary.Models;
@{
    ViewData["Title"] = "DPV";
}

@model List<Template>

<input name="templateName" type="hidden" value="@Model.First().Name" />
<div class="col">
    @for (int i = 0; i < Model.Count; i++)
    {
        <div class="row">
            @for (int j = i + 1; j < Model.Count; j++)
            {
                @switch (Model[i].PopertyType)
                {
                    case "Title":
                        <div class="col-2">
                            <h2>
                                @Model[i].PopertyValue
                            </h2>
                        </div>

                        break;

                    case "Description":
                        <div class="col-10">
                            <p>
                                @Model[i].PopertyValue
                            </p>
                        </div>

                        break;

                    case "Media":
                        <div class="col-6">
                            <div id="carouselExampleCaptions" class="carousel slide carousel-dark">
                                <div class="carousel-inner">
                                    <div class="carousel-item active">
                                        <div class="fixed-ratio-resize">
                                            <img src="./DynamicUploadedFiles/@Model[i].PopertyValue.Split(" ")[0]" class="d-block w-100">
                                        </div>

                                    </div>
                                    @if (Model[i].PopertyValue.Split(" ").Length > 1)
                                    {
                                        @for (int k = 1; k < Model[i].PopertyValue.Split(" ").Length; k++)
                                        {
                                            <div class="carousel-item">
                                                <div class="fixed-ratio-resize">
                                                    <img src="./DynamicUploadedFiles/@Model[i].PopertyValue.Split(" ")[k]" class="d-block w-100">
                                                </div>
                                            </div>
                                        }
                                    }

                                </div>
                                <button class="carousel-control-prev" type="button" data-bs-target="#carouselExampleCaptions" data-bs-slide="prev">
                                    <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                                    <span class="visually-hidden">Previous</span>
                                </button>
                                <button class="carousel-control-next" type="button" data-bs-target="#carouselExampleCaptions" data-bs-slide="next">
                                    <span class="carousel-control-next-icon" aria-hidden="true"></span>
                                    <span class="visually-hidden">Next</span>
                                </button>
                            </div>

                            @*                            <p>
            @Model[i].PopertyValue
            </p>*@
                        </div>

                        break;

                    default:
                        break;

                }
                @if (Model[i].PopertySequence != Model[j].PopertySequence)
                    break;

                i++;
            }

            @if (i + 1 == Model.Count)
            {
                @switch (Model[i].PopertyType)
                {
                    case "Title":
                        <div class="col-2">
                            <h2>
                                @Model[i].PopertyValue
                            </h2>
                        </div>

                        break;

                    case "Description":
                        <div class="col-10">
                            <p>
                                @Model[i].PopertyValue
                            </p>
                        </div>

                        break;
                    case "Media":
                        <div class="col-6">
                            <div id="carouselExampleCaptions" class="carousel slide carousel-dark">
                                <div class="carousel-inner">
                                    <div class="carousel-item active">
                                        <div class="fixed-ratio-resize">
                                            <img src="./DynamicUploadedFiles/@Model[i].PopertyValue.Split(" ")[0]" class="d-block w-100" >
                                        </div>

                                    </div>
                                    @if (Model[i].PopertyValue.Split(" ").Length > 1)
                                    {
                                        @for (int k = 1; k < Model[i].PopertyValue.Split(" ").Length; k++)
                                        {
                                            <div class="carousel-item">
                                                <div class="fixed-ratio-resize">
                                                    <img src="./DynamicUploadedFiles/@Model[i].PopertyValue.Split(" ")[k]" class="d-block w-100" >
                                                </div>
                                            </div>
                                        }
                                    }

                                </div>
                                <button class="carousel-control-prev" type="button" data-bs-target="#carouselExampleCaptions" data-bs-slide="prev">
                                    <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                                    <span class="visually-hidden">Previous</span>
                                </button>
                                <button class="carousel-control-next" type="button" data-bs-target="#carouselExampleCaptions" data-bs-slide="next">
                                    <span class="carousel-control-next-icon" aria-hidden="true"></span>
                                    <span class="visually-hidden">Next</span>
                                </button>
                            </div>

                            @*                            <p>
            @Model[i].PopertyValue
            </p>*@
                        </div>

                        break;
                    default:
                        break;

                }
            }
        </div>
        <hr />
        <br />
    }
</div>